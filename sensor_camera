#This is the main body of the recycling sorter program

#Import requirements
from actuateServo import actuateServo
from tft import operateTFT

# Import for proximity sensor 
import RPi.GPIO as GPIO

# Import for the camera
from picamera2 import Picamera2
import cv2 as cv
import os

# GPIO pins


# Proximity sensor
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
TRIG = 23
ECHO = 24
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(TRIG, GPIO.IN)

# Camera

#Make a camera structure
cap = Picamera2()

#Pass some basic configurations
cap.configure(cap.create_still_configuration(main={"format": "XRGB8888", "size": (640, 480)}))

while True:
	# Proximity sensor logic
	GPIO.output(TRIG, True)
	time.sleep(0.00001)
	GPIO.output(TRIG, False)
	while GPIO.input(ECHO) == 0:
		pulse_start = time.time()
	while GPIO.input(ECHO) == 1:
		pulse_end = time.time()
	pulse_duration = pulse_end - pulse_start
	distance = pulse_duration * 17150
	distance = round(distance,2) 	
	
	# We can change the proximity sensor reading distance here
	if distance < 10:
		# Camera logic here ------------------------
		#Begin the stream
		cap.start()

		#start function returns 0 on success, 1 on error
		#Make sure that the stream actually opened
		if cap.start():
			print("Unable to open camera stream")

		else:	
			while True:
				im = cap.capture_array()
				cv.imshow("Frame", im)
				if cv.waitKey(1) & 0xFF == ord('q'):
					cv.imwrite('images/c1.png', im)
					cv.destroyAllWindows()
					break
					
		cmd= "arecord -D hw:2,0 -d 5 -f cd ~/Desktop/471/project/test.wav -c 1"
		os.system(cmd)

		# Camera logic here ------------------------


#Debug variable
#material = "paper"
#matType = "paper"

#actuateServo(material)
#operateTFT(matType)

